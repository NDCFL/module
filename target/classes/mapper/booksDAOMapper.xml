<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cfl.dao.BooksDAO">
    <resultMap id="bookTypeMap" type="com.cfl.vo.BooksVo"></resultMap>
    <resultMap id="select2VoMap" type="com.cfl.vo.Select2Vo"></resultMap>
    <select id="getById" resultMap="bookTypeMap" parameterType="long">
        select t.*,(select name from t_booktype where t.book_type_id=t_booktype.id) as bookTypeName,(select name from t_book_module where t.book_module=t_book_module.id) as bookModuleName from t_books t  where t.id = #{id}
    </select>
    <delete id="removeById" parameterType="long">
        delete from t_books where id = #{id}
    </delete>
    <select id="getBooks" resultMap="select2VoMap">
        select id,name as text from t_books
    </select>
    <select id="listPage" resultMap="bookTypeMap">
        select t.*,(select name from t_booktype where t.book_type_id=t_booktype.id) as bookTypeName,(select name from t_book_module where t.book_module=t_book_module.id) as bookModuleName  from t_books t  order by t.create_time desc limit #{pageNo},#{pageSize}
    </select>
    <select id="listAll" resultMap="bookTypeMap">
        select * from t_books
    </select>
    <select id="count" resultType="java.lang.Long">
        select count(*) from t_books
    </select>
    <insert id="save" parameterType="bookTypeVo">
        insert into t_books (name, title, introduction, book_type_id, author, word_count, `section`, update_time, face_img, collect_count, reward_count, discuss_count, read_count, publish_user_id, is_last, status,create_time,book_module) values (#{name}, #{title}, #{introduction}, #{bookTypeId}, #{author}, #{wordCount}, #{section}, #{updateTime}, #{faceImg}, #{collectCount}, #{rewardCount}, #{discussCount}, #{readCount}, #{publishUserId}, #{isLast}, #{status},#{createTime},#{bookModule})
    </insert>
    <update id="updateStatus">
        update t_books set status=#{status} where id=#{id}
    </update>
    <update id="update">
        update t_books set
                name = #{name},
                title = #{title},
                introduction = #{introduction},
                book_type_id = #{bookTypeId},
                author = #{author},
                word_count = #{wordCount},
                section = #{section},
                update_time = #{updateTime},
                face_img = #{faceImg},
                is_last = #{isLast},
                book_module=#{bookModule}
        where id = #{id}
    </update>
</mapper>